<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="java.nio.file.Files"/>
    <fullyQualifiedTypeName name="java.nio.file.Paths"/>
    <fullyQualifiedTypeName name="java.io.IOException"/>
    <fullyQualifiedTypeName name="com.sun.net.httpserver.HttpServer"/>
    <fullyQualifiedTypeName name="java.net.InetSocketAddress"/>
    <fullyQualifiedTypeName name="java.util.concurrent.Executors"/>
    <fullyQualifiedTypeName name="java.util.concurrent.Executor"/>
    <fullyQualifiedTypeName name="com.sun.net.httpserver.HttpHandler"/>
    <fullyQualifiedTypeName name="ThroughputHttpServer.WordCountHandler"/>
    <fullyQualifiedTypeName name="java.io.OutputStream"/>
    <fullyQualifiedTypeName name="ResourceShareTest.InventoryCounter"/>
    <fullyQualifiedTypeName name="ResourceShareTest.IncrementThread"/>
    <fullyQualifiedTypeName name="java.lang.Thread"/>
    <fullyQualifiedTypeName name="java.lang.System"/>
    <fullyQualifiedTypeName name="MetricsTest.Metrics"/>
    <fullyQualifiedTypeName name="MetricsTest.BusinessLogic"/>
    <fullyQualifiedTypeName name="MetricsTest.MetricsPrinter"/>
    <fullyQualifiedTypeName name="DataRaceTest.SharedClass"/>
    <fullyQualifiedTypeName name="ResourceShareTest.DecrementThread"/>
    <fullyQualifiedTypeName name="java.lang.Integer"/>
    <fullyQualifiedTypeName name="java.util.Random"/>
    <fullyQualifiedTypeName name="java.lang.InterruptedException"/>
    <fullyQualifiedTypeName name="DeadlockTest1.Intersection"/>
    <fullyQualifiedTypeName name="DeadlockTest1.TrainA"/>
    <fullyQualifiedTypeName name="java.util.concurrent.locks.ReentrantLock"/>
    <fullyQualifiedTypeName name="ReetnrantLockTest.CriticalOperation"/>
    <fullyQualifiedTypeName name="sun.security.rsa.RSAPrivateCrtKeyImpl"/>
    <fullyQualifiedTypeName name="java.lang.RuntimeException"/>
    <fullyQualifiedTypeName name="ReentrantReadWriteLockTest"/>
    <fullyQualifiedTypeName name="java.util.concurrent.locks.ReentrantReadWriteLock"/>
    <fullyQualifiedTypeName name="java.util.concurrent.locks.Lock"/>
    <fullyQualifiedTypeName name="java.util.concurrent.atomic.AtomicReference"/>
</qualifiedTypeNameHistroy>
